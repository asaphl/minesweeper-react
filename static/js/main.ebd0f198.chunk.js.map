{"version":3,"sources":["components/decorations/Flag.jsx","components/decorations/Bomb.jsx","components/Tile.jsx","utils/BoardFunctions.js","constants/GameStatus.js","components/Board.jsx","utils/arrayFunctions.js","utils/flaggingFunctions.js","components/Timer.jsx","components/Counter.jsx","components/LevelSetter.jsx","components/Banner.jsx","components/decorations/Flower.jsx","components/decorations/Grass.jsx","components/BackgroundDecorations.jsx","constants/BoardSettings.js","components/ResetButton.jsx","App.js","index.js"],"names":["Flag","props","className","Bomb","Tile","flagged","revealed","value","tileClass","tileContent","Fragment","onClick","reveal","index","onContextMenu","e","preventDefault","toggleFlag","lastInLine","lineBreak","createBoard","boardSettings","boardSize","rows","cols","board","Array","fill","bombs","bombIndex","Math","floor","random","getNeighbors","forEach","neighborTileIndex","tileIndex","row","numOfCols","calculateTileRow","col","calculateTileCol","neighbors","bottomNeighborLimit","leftNeighborLimit","rightNeighborLimit","rowShift","colShift","calculateTileIndex","push","revealArray","recursivelyFindAllNeighboringEmptyTiles","startingTileIndex","shouldReveal","neighborIndex","includes","STATUS","PLAY","WIN","LOSE","Board","state","flags","revealTile","bind","prevProps","this","gameCounter","newState","setState","exceptions","concat","newRevealed","arr1","arr2","arraysSet","Set","from","mergeUnique","arr","filter","member","excludeExceptions","endGame","arrayLength","all","length","map","flagIndex","status","newFlagList","flagsArr","flaggedIndex","updateFlagList","updateCounter","numberOfTilesWithoutBombs","getNumberOfTilesWithoutBombs","bombsArr","sortedFlags","sort","sortedBombs","arraysMatch","flag","compareFlagsAndBombs","boardLength","implicitFlagList","i","indexOf","getImplicitFlagList","val","indexes","findAllIndexes","checkForWin","revealAll","boardTiles","tileValue","key","Component","Timer","time","startTimer","stopTimer","timerID","setInterval","updateTimer","clearInterval","secondsPassed","minutes","seconds","formatTime","Counter","class","remainingFlags","LevelSetter","handleClick","level","setLevel","chosenLevel","levels","Banner","gameStatus","Flower","Grass","BackgroundDecorations","flowerCoords","createRandomCoordsArray","flowers","grassCoords","grass","num","coordinates","top","window","innerHeight","left","innerWidth","element","coordArray","coord","style","position","renderDecoration","BOARD_SETTINGS","EASY","NORMAL","HARD","ResetButton","reset","App","flagCounter","updateFlagCounter","setStatus","count","newStatus","Object","values","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebd0f198.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Flag(props) {\r\n  return (\r\n    <div className=\"flag\">\r\n      <div className=\"banner\"></div>\r\n      <div className=\"pole\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Flag;","import React from 'react';\r\n\r\nfunction Bomb(props) {\r\n  return (\r\n    <div className=\"bomb\">\r\n      <div className=\"bomb-body\"></div>\r\n      <div className=\"bomb-head\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bomb;","import React from \"react\";\r\nimport Flag from \"./decorations/Flag\";\r\nimport Bomb from \"./decorations/Bomb\";\r\n\r\nfunction Tile(props) {\r\n  const { flagged, revealed, value } = props;\r\n\r\n  const handleClick = () => {\r\n    props.reveal(props.index);\r\n  };\r\n\r\n  const handleRightClick = (e) => {\r\n    e.preventDefault();\r\n    props.toggleFlag(props.index);\r\n  };\r\n\r\n  const tileClass = \"tile\" + (revealed ? \" revealed\" : \"\");\r\n  let tileContent = \"\";\r\n  if (revealed) {\r\n    if (value < 0) tileContent = <Bomb />;\r\n    if (value > 0) tileContent = value;\r\n  }\r\n  if (flagged) tileContent = <Flag />;\r\n\r\n  const lineBreak = () => {\r\n    if (props.lastInLine) return <br />;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <button\r\n        className={ tileClass }\r\n        onClick={ handleClick }\r\n        onContextMenu={ handleRightClick }\r\n      >\r\n        <span>&nbsp;{ tileContent }</span>\r\n      </button>\r\n      {lineBreak()}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Tile;\r\n","export function createBoard(boardSettings) {\r\n  // initialize board\r\n  // the board is an array of tiles containing the number of mines around it, or -1 if it is a bomb\r\n  const { rows, cols } = boardSettings;\r\n  const boardSize = rows * cols;\r\n  let board = new Array(boardSize).fill(0);\r\n  let bombs = boardSettings.bombs;\r\n  while (bombs > 0) {\r\n    const bombIndex = Math.floor(Math.random() * boardSize);\r\n    if (board[bombIndex] !== -1) {\r\n      board[bombIndex] = -1;\r\n      bombs--;\r\n      const neighbors = getNeighbors(bombIndex, boardSettings);\r\n      neighbors.forEach((neighborTileIndex) => {\r\n        if (board[neighborTileIndex] !== -1) board[neighborTileIndex] += 1;\r\n      });\r\n    }\r\n  }\r\n  return board;\r\n}\r\n\r\nexport function getNeighbors(tileIndex, boardSettings) {\r\n  const { rows, cols } = boardSettings;\r\n  const row = calculateTileRow(tileIndex, cols), col = calculateTileCol(tileIndex, cols);\r\n  let neighbors = [];\r\n  const topNeighborLimit = row > 0 ? -1 : 0,\r\n        bottomNeighborLimit = row < rows - 1 ? 1 : 0,\r\n        leftNeighborLimit = col > 0 ? -1 : 0,\r\n        rightNeighborLimit = col < cols - 1 ? 1 : 0;\r\n\r\n  for (let rowShift = topNeighborLimit; rowShift <= bottomNeighborLimit; rowShift++) {\r\n    for (let colShift = leftNeighborLimit; colShift <= rightNeighborLimit; colShift++) {\r\n      const neighborRow = row + rowShift;\r\n      const neighborCol = col + colShift;\r\n      const neighborTileIndex = calculateTileIndex(neighborRow, neighborCol, cols);\r\n      neighbors.push(neighborTileIndex);\r\n    }\r\n  }\r\n  return neighbors;\r\n}\r\n\r\nexport function recursivelyFindAllNeighboringEmptyTiles(startingTileIndex, boardSettings, board, shouldReveal=[]) {\r\n  const neighbors = getNeighbors(startingTileIndex, boardSettings);\r\n  neighbors.forEach((neighborIndex) => {\r\n    if (shouldReveal.includes(neighborIndex)) return;\r\n    shouldReveal.push(neighborIndex);\r\n    if (board[neighborIndex] === 0) recursivelyFindAllNeighboringEmptyTiles(neighborIndex, boardSettings, board, shouldReveal);\r\n  });\r\n  return shouldReveal;\r\n}\r\n\r\nexport function reveal(tileIndex, board, boardSettings) {\r\n  let revealArray = [];\r\n  if (board[tileIndex] === 0) revealArray = recursivelyFindAllNeighboringEmptyTiles(tileIndex, boardSettings, board, [tileIndex]);\r\n  if (board[tileIndex] > 0) revealArray = [tileIndex];\r\n  return revealArray;\r\n}\r\n\r\nexport function getNumberOfTilesWithoutBombs(boardSettings) {\r\n  const { rows, cols, bombs } = boardSettings;\r\n  return ((rows * cols) - bombs);\r\n}\r\n\r\nexport function calculateTileIndex(row, col, numOfCols) {\r\n  return (row * numOfCols) + col;\r\n}\r\n\r\nexport function calculateTileRow(tileIndex, numOfCols) {\r\n  return Math.floor(tileIndex / numOfCols);\r\n}\r\n\r\nexport function calculateTileCol(tileIndex, numOfCols) {\r\n  return tileIndex % numOfCols;\r\n}\r\n\r\nconst BoardFunctions = {\r\n  createBoard, getNeighbors\r\n}\r\n\r\nexport default BoardFunctions;\r\n","const STATUS = {\r\n  PLAY: 0,\r\n  WIN: 1,\r\n  LOSE: 2\r\n}\r\n\r\nexport default STATUS;","import React, { Component } from \"react\";\r\nimport Tile from \"./Tile\";\r\nimport { createBoard, getNumberOfTilesWithoutBombs, reveal } from \"../utils/BoardFunctions\";\r\nimport { mergeUnique, findAllIndexes, excludeExceptions, populateArrayWithIndexes } from \"../utils/arrayFunctions\";\r\nimport { compareFlagsAndBombs, getImplicitFlagList, updateFlagList } from \"../utils/flaggingFunctions\";\r\nimport STATUS from \"../constants/GameStatus\";\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      board: createBoard(props.boardSettings),\r\n      revealed: [],\r\n      flags: []\r\n    };\r\n    this.revealTile = this.revealTile.bind(this);\r\n    this.toggleFlag = this.toggleFlag.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.boardSettings !== this.props.boardSettings || prevProps.gameCounter !== this.props.gameCounter) {\r\n      const newState = {\r\n        revealed: [],\r\n        flags: [],\r\n        board: createBoard(this.props.boardSettings),\r\n      };\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  revealTile(tileIndex) {\r\n    const { revealed, board, flags } = this.state, { boardSettings } = this.props;\r\n    const exceptions = revealed.concat(flags);\r\n    if (exceptions.includes(tileIndex)) return;\r\n    if (board[tileIndex] === -1) {\r\n      this.props.endGame(STATUS.LOSE);\r\n      return;\r\n    }\r\n    const reveals = reveal(tileIndex, board, boardSettings);  \r\n    const shouldReveal = excludeExceptions(reveals, exceptions);\r\n    const newRevealed = mergeUnique(revealed, shouldReveal);\r\n    this.setState({\r\n      revealed: newRevealed\r\n    });\r\n  }\r\n  \r\n  revealAll() {\r\n    const { board } = this.state;\r\n    const all = populateArrayWithIndexes(board.length);\r\n    this.setState({ revealed: all });\r\n  }\r\n\r\n  toggleFlag(flagIndex) {\r\n    const { bombs, status } = this.props, { flags, revealed } = this.state;\r\n    if ((status !== STATUS.PLAY || revealed.includes(flagIndex)) || (flags.length === bombs && !flags.includes(flagIndex))) return;\r\n    const newFlagList = updateFlagList(flagIndex, flags);\r\n    this.props.updateCounter(newFlagList.length);\r\n    this.setState({ flags: newFlagList });\r\n  }\r\n\r\n  checkForWin() {\r\n    const { boardSettings } = this.props, { board, flags, revealed } = this.state;\r\n    const numberOfTilesWithoutBombs = getNumberOfTilesWithoutBombs(boardSettings);\r\n    if (revealed.length === numberOfTilesWithoutBombs || flags.length === boardSettings.bombs) {\r\n      const flagList = (flags.length === boardSettings.bombs) ? flags : getImplicitFlagList(revealed, board.length);\r\n      const bombList = findAllIndexes(board, -1);\r\n      return compareFlagsAndBombs(flagList, bombList);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    const { status, boardSettings } = this.props, { board, flags, revealed } = this.state;\r\n\r\n    if (status === STATUS.PLAY) {\r\n      if (this.checkForWin()) this.props.endGame(STATUS.WIN);\r\n    } else {\r\n      if (revealed.length !== board.length) this.revealAll();\r\n    }\r\n    const boardTiles = board.map((tileValue, tileIndex) => {\r\n      return (\r\n        <Tile\r\n          key={tileIndex}\r\n          index={tileIndex}\r\n          value={tileValue}\r\n          revealed={revealed.includes(tileIndex)}\r\n          flagged={flags.includes(tileIndex)}\r\n          reveal={this.revealTile}\r\n          toggleFlag={this.toggleFlag}\r\n          lastInLine={(tileIndex + 1) % boardSettings.cols === 0}\r\n        />\r\n      );\r\n    });\r\n\r\n    return <div className=\"board\">{boardTiles}</div>;\r\n  }\r\n}","export function mergeUnique(arr1, arr2) {\r\n  let arraysSet = new Set(arr1.concat(arr2));\r\n  return Array.from(arraysSet);\r\n}\r\n\r\nexport function findAllIndexes(arr, val) {\r\n  var indexes = [], i = -1;\r\n  while ((i = arr.indexOf(val, i+1)) !== -1){\r\n      indexes.push(i);\r\n  }\r\n  return indexes;\r\n}\r\n\r\nexport function excludeExceptions(arr, exceptions) {\r\n  return arr.filter(member => !exceptions.includes(member));\r\n}\r\n\r\nexport function populateArrayWithIndexes(arrayLength) {\r\n  const arr = new Array(arrayLength).fill().map((member, index) => index);\r\n  return arr;\r\n}","export function compareFlagsAndBombs(flagsArr, bombsArr) {\r\n  const sortedFlags = flagsArr.sort(), sortedBombs = bombsArr.sort();\r\n  let arraysMatch = true;\r\n  sortedFlags.forEach((flag, index) => {\r\n    arraysMatch *= (flag === sortedBombs[index]);\r\n  })\r\n  return arraysMatch;\r\n}\r\n\r\nexport function getImplicitFlagList(revealed, boardLength) {\r\n  let implicitFlagList = [];\r\n  for ( let i = 0; i < boardLength; i++ ) {\r\n    if (revealed.indexOf(i) === -1) implicitFlagList.push(i);\r\n  }\r\n  return implicitFlagList;\r\n}\r\n\r\nexport function updateFlagList(flagIndex, flagsArr) {\r\n  return flagsArr.includes(flagIndex) ? \r\n      flagsArr.filter((flaggedIndex) => !(flaggedIndex === flagIndex)) :\r\n      [...flagsArr, flagIndex];\r\n}","import React, { Component } from \"react\";\r\nimport STATUS from \"../constants/GameStatus\";\r\n\r\nexport default class Timer extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      time: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.startTimer();\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if (prevProps.status === this.props.status) return;\r\n    if (this.props.status === STATUS.PLAY) this.startTimer();\r\n    if (this.props.status !== STATUS.PLAY) this.stopTimer();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stopTimer();\r\n  }\r\n\r\n  startTimer() {\r\n    this.setState({ time: 0 });\r\n    this.timerID = setInterval(() => this.updateTimer(), 1000);\r\n  }\r\n\r\n  updateTimer() {\r\n    const { time } = this.state;\r\n    this.setState({\r\n      time: time + 1,\r\n    });\r\n  }\r\n\r\n  stopTimer() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  formatTime(secondsPassed) {\r\n    var minutes = Math.floor(secondsPassed / 60);\r\n    var seconds = secondsPassed - minutes * 60;\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n    if (seconds < 10) seconds = \"0\" + seconds;\r\n    return minutes + \" : \" + seconds;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"setting-container\">\r\n        Time: <span className=\"setting-field\">{ this.formatTime(this.state.time) }</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Counter(props) {\r\n  return (\r\n    <div class=\"setting-container\">\r\n      Bombs <span class=\"setting-field\">{ props.remainingFlags }</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import React from 'react';\r\n\r\nfunction LevelSetter(props) {\r\n\r\n    const handleClick = (level) => {\r\n        props.setLevel(level);\r\n    };\r\n\r\n    return (\r\n        <div class=\"setting-container\">\r\n        Level &nbsp; \r\n            <div class=\"dropdown\">\r\n            <span className=\"dropdown-selected\">{ props.chosenLevel.level }</span>\r\n              <ul className=\"dropdown-content\">\r\n                { props.levels.map((level) => <li onClick = { handleClick.bind(this, level) }>{ level.level }</li>) }\r\n              </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LevelSetter;","import React from \"react\";\r\nimport STATUS from \"../constants/GameStatus\";\r\n\r\nfunction Banner(props) {\r\n  const { status } = props;\r\n  const gameStatus =\r\n    status === STATUS.PLAY ? (\r\n      <React.Fragment />\r\n    ) : status === STATUS.WIN ? (\r\n      <h1>Congratualtions! You Won!</h1>\r\n    ) : (\r\n      <h1>Game Over :(</h1>\r\n    );\r\n  return <div class=\"banner-status\">{gameStatus}</div>;\r\n}\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\n\r\nfunction Flower(props) {\r\n    return (\r\n        <div class=\"flower\">\r\n          <div class=\"petal\"></div>\r\n          <div class=\"petal\"></div>\r\n          <div class=\"petal\"></div>\r\n          <div class=\"petal\"></div>\r\n          <div class=\"petal\"></div>\r\n          <div class=\"petal\"></div>\r\n          <div class=\"petal\"></div>\r\n          <div class=\"petal\"></div>\r\n          <div class=\"button\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Flower;","import React from 'react';\r\n\r\nfunction Grass(props) {\r\n  return <div class=\"grass\"></div>;\r\n}\r\n\r\nexport default Grass;","import React, { Component } from 'react';\r\nimport Flower from './decorations/Flower';\r\nimport Grass from './decorations/Grass';\r\n\r\nexport default class BackgroundDecorations extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      flowerCoords: this.createRandomCoordsArray(props.flowers),\r\n      grassCoords: this.createRandomCoordsArray(props.grass)\r\n    }\r\n  }\r\n\r\n  createRandomCoordsArray(num) {\r\n    let coordinates = [];\r\n    for (let i = 0; i < num; i++) {\r\n      coordinates.push({\r\n        top: Math.floor(Math.random() * window.innerHeight),\r\n        left: Math.floor(Math.random() * window.innerWidth),\r\n      });\r\n    }\r\n    return coordinates;\r\n  }\r\n\r\n  renderDecoration (element, coordArray) {\r\n    const renderedDecoration = coordArray.map((coord) => {\r\n      return <div className=\"decoration-container\" style={ {...coord, position: 'absolute'} }>\r\n        { element }\r\n      </div>\r\n    })\r\n    return renderedDecoration;\r\n  }\r\n\r\n  render() {    \r\n    const { flowerCoords, grassCoords } = this.state;\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            { this.renderDecoration(<Flower />, flowerCoords) }\r\n            { this.renderDecoration(<Grass />, grassCoords)}\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}","const BOARD_SETTINGS = {\r\n  EASY: {\r\n    level: \"Easy\",\r\n    rows: 6,\r\n    cols: 6,\r\n    bombs: 5\r\n  },\r\n  NORMAL: {\r\n    level: \"Normal\",\r\n    rows: 10,\r\n    cols: 10,\r\n    bombs: 20\r\n  },\r\n  HARD:{\r\n    level: \"Hard\",\r\n    rows: 16,\r\n    cols: 24,\r\n    bombs: 100\r\n  },\r\n};\r\n\r\nexport default BOARD_SETTINGS;\r\n","import React from 'react';\r\n\r\nfunction ResetButton(props) {\r\n  return (\r\n    <div className=\"setting-container\" onClick={() => {props.reset(props.boardSettings)}} >\r\n      Reset <span className=\"reset-button\">&nbsp;<span className=\"reset-arrow\"></span></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetButton;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/Board\";\nimport Timer from \"./components/Timer\";\nimport Counter from \"./components/Counter\";\nimport LevelSetter from \"./components/LevelSetter\";\nimport Banner from \"./components/Banner\";\nimport BackgroundDecorations from \"./components/BackgroundDecorations\";\nimport BOARD_SETTINGS from './constants/BoardSettings';\nimport STATUS from './constants/GameStatus';\nimport ResetButton from \"./components/ResetButton\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: STATUS.PLAY,\n      boardSettings: BOARD_SETTINGS.EASY,\n      flagCounter: BOARD_SETTINGS.EASY.bombs,\n      gameCounter: 1\n    }\n    this.updateFlagCounter = this.updateFlagCounter.bind(this);\n    this.setLevel = this.setLevel.bind(this);\n    this.setStatus = this.setStatus.bind(this);\n  }\n\n  updateFlagCounter(count) {\n    this.setState({ flagCounter: this.state.boardSettings.bombs - count });\n  }\n\n  setStatus(newStatus) {\n    this.setState({ status: newStatus });\n  }\n\n  setLevel(chosenLevel) {\n    this.setState( {\n      boardSettings: chosenLevel,\n      status: STATUS.PLAY,\n      flagCounter: chosenLevel.bombs,\n      gameCounter: this.state.gameCounter+1\n    } );\n  }\n\n  render() {\n    const {\n      flagCounter,\n      boardSettings,\n      status,\n      gameCounter\n    } = this.state;\n\n\n    return (\n      <div className=\"main\">\n        <BackgroundDecorations flowers={100} grass={50} />\n        <Banner status={status} />\n        <div className=\"settings\">\n          <Timer status={status} />\n          <Counter remainingFlags={flagCounter} />\n          <ResetButton boardSettings={boardSettings} reset={this.setLevel} />\n          <LevelSetter\n            levels={Object.values(BOARD_SETTINGS)}\n            chosenLevel={boardSettings}\n            setLevel={this.setLevel}\n          />\n        </div>\n        <Board\n          endGame={this.setStatus}\n          updateCounter={this.updateFlagCounter}\n          status={status}\n          boardSettings={boardSettings}\n          gameCounter={gameCounter}\n        />  \n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}